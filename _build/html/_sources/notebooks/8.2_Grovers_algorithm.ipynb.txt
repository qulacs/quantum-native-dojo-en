{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 8-2. Grover's algorithm\n",
    "\n",
    "Grover's algorithm is a quantum algorithm for searching for specific data from an unsorted database [1].\n",
    "Grover's algorithm can find a solution in $O(\\sqrt{N})$ queries (calling an oracle) for $N$ unsorted data. Since $O(N)$ queries are required for a classical computer, a quadratic acceleration is achieved by using a quantum algorithm.\n",
    "\n",
    "Once the oracle is constructed, Grover's algorithm can accelerate the entire search portion of any classical algorithm. For example\n",
    "\n",
    "- Satisfiability problem (SAT problem)\n",
    "- The problem of finding the original value from a particular hash value\n",
    "\n",
    "and the latter has actually been proposed in a paper as a Bitcoin mining acceleration [2].\n",
    "\n",
    "In this section, we first provide a theoretical explanation of Grover's algorithm and then present an example implementation using Qulacs."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Algorithm Flow\n",
    "The flow of Grover's algorithm is simple and is as follows.\n",
    "As in the previous section, consider the problem of searching for $M$ solutions from a database of $N$ elements, where the element labels are $N$ digit bit sequences $x = x_1 \\ldots x_n$.\n",
    "\n",
    "1. prepare a superposition of all states $|s\\rangle = \\frac{1}{\\sqrt{N}}\\sum_x |x\\rangle$.\n",
    "2. apply oracle $U_w$ (reversal operation on the solution)\n",
    "3. apply the inversion operation $U_s$ with $|s\\rangle$ as the axis of symmetry\n",
    "4. Repeat steps 2 and 3 $k$ times\n",
    "5. perform the measurement\n",
    "\n",
    "Let's look at each step in detail."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 1. prepare a superposition state of all states $|s\\rangle = \\frac{1}{\\sqrt{N}}\\sum_x |x\\rangle$.\n",
    "This is easy. For the initial state $|0\\cdots0\\rangle$, we can apply Hadamard gate $H$ to all qubits.\n",
    "\n",
    "$$\n",
    " (H\\otimes \\cdots \\otimes H) |0\\cdots0\\rangle = \\frac{1}{(\\sqrt{2})^n} (|0\\rangle+|1\\rangle) \\otimes \\cdots \\otimes (|0\\rangle+|1\\rangle)\n",
    " = |s\\rangle\n",
    "$$\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 2. Apply the oracle $U_w$ (reversal operation on the solution)\n",
    "Next, we let the oracle act on the state $|s\\rangle$.\n",
    "Here, as an oracle, we will consider the operation \"if $x$ is a solution to the input $|x\\rangle$, the phase is inverted by multiplying by (-1), and if it is not a solution, nothing is done\" as described at the end of [previous section](8.1_oracle.ipynb), and the auxiliary bits are omitted. In other words, define the oracle $U_w$ as follows.\n",
    "\n",
    "$$\n",
    " U_w = I - 2\\sum_{w\\in \\text{solution}}|w\\rangle \\langle w|,  \n",
    "$$\n",
    "\n",
    "$$\n",
    " U_w|x\\rangle =  \n",
    "\\begin{cases}\n",
    " |x\\rangle  \\:\\: \\text{(x is not solution)} \\\\\n",
    " -|x\\rangle \\:\\: \\text{(x is solution)}\n",
    "\\end{cases}\n",
    "$$\n",
    "\n",
    "The oracle $U_w$ is called an \"inversion operation on the solution\" because it inverts the phase only when the input is a solution."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 3. Applying the inversion operation $U_s$ with $|s\\rangle$ as the axis of symmetry\n",
    "In step 2, we considered the inversion operation on the solution, and in step 3, we will apply the inversion operation $U_s$ with the superposition of all states $|s\\rangle$ as the axis of symmetry.\n",
    "\n",
    "$$\n",
    " U_s = 2 |s\\rangle \\langle s| - I\n",
    "$$\n",
    "\n",
    "This operator acts on input state $|\\psi\\rangle = a|s\\rangle + b|s_\\perp\\rangle$ ($|s_\\perp\\rangle$ is a vector orthogonal to $|s\\rangle$)as follows\n",
    "\n",
    "$$\n",
    " U_s|\\psi\\rangle = a |s\\rangle - b|s_\\perp\\rangle\n",
    "$$\n",
    "\n",
    "and inverts only the phase of the part proportional to $|s_\\perp\\rangle$."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 4. Repeat steps 2 and 3 $k$ times\n",
    "Repeat the above two inversion operations $U_w$ and $U_s$. As we will see later, approximately $O(\\sqrt{N/M})$ iterations are sufficient to obtain a solution with high enough probability in the next step: measurement. In other words, the number of times to call the oracle is $O(\\sqrt{N})$."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 5. Take a measurement\n",
    "After the steps up to this point, the state is $(U_s U_w)^k | s \\rangle$. $k$ is the number of iterations of steps 2 and 3.\n",
    "As described below, in fact, (absolute value of) the coefficient of the state $|w\\rangle$ corresponding to the solution $w$ is very large in this state, so if we perform the measurement in the computational basis, we can obtain the solution $w$ (bit string) with a high probability.\n",
    "\n",
    "\n",
    "Roughly speaking, this is the only operation to be performed in Grover's algorithm, and it is very simple."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Geometric Explanation\n",
    "Next, we provide a geometric explanation of why Grover's algorithm works. (There are other explanations that focus on the average operation of the coefficients, see for example [3].)\n",
    "\n",
    "#### Definition of a two-dimensional plane\n",
    "First, consider a two-dimensional plane stretched in the following two states $|\\alpha\\rangle,|\\beta\\rangle$.\n",
    "\n",
    "$$\n",
    "|\\alpha\\rangle = \\frac{1}{\\sqrt{N-M}} \\sum_{x \\in {not solution}} |x\\rangle\n",
    "$$\n",
    "\n",
    "$$\n",
    "|\\beta\\rangle = \\frac{1}{\\sqrt{M}}\\sum_{x \\in solution} |x\\rangle\n",
    "$$  \n",
    "\n",
    "The superposition state $|s\\rangle$ of all states can be expressed as follows, which shows that it is a vector in this 2-dimensional plane.\n",
    "\n",
    "$$\n",
    "|s\\rangle = \\sqrt{\\frac{N-M}{N}} |\\alpha\\rangle + \\sqrt{\\frac{M}{N}} |\\beta\\rangle\n",
    "$$\n",
    "\n",
    "In particular, using angles which satisfies $\\cos{\\frac{\\theta}{2}} = \\sqrt{\\frac{N-M}{N}}, \\sin{\\frac{\\theta}{2}} = \\sqrt{\\frac{M}{N}}$ we can write\n",
    "\n",
    "$$\n",
    "|s\\rangle = \\cos{\\frac{\\theta}{2}} |\\alpha\\rangle + \\sin{\\frac{\\theta}{2}} |\\beta\\rangle\n",
    "$$\n",
    "\n",
    "This is illustrated in the following figure.\n",
    "(Note that since $N \\gg{} M$ in general in search problems, $\\sqrt{M/N}$ is close to 0 and $\\theta$ is often a positive number close to 0.)\n",
    "\n",
    "![Grovers](figs/8/GroverReflection.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Two inversion operations $U_s U_w$ = rotation in a two-dimensional plane \n",
    "Considering in this plane, the oracle $U_w$ is an inversion operation with respect to the $|\\beta\\rangle$ axis ($U_w|\\alpha\\rangle =|\\alpha\\rangle, U_w|\\beta\\rangle = -|\\beta\\rangle$).\n",
    "Therefore, after applying $U_w$, applying inversion $U_s$ with $|s\\rangle$ as the symmetry axis will result in a rotation in the $|\\alpha\\rangle,|\\beta\\rangle$ plane by an angle $\\theta$. (see the figure).\n",
    "\n",
    "Since Grover's algorithm repeats $U_s U_w$ $k$ times, the state is rotated $k$ times, and just before the measurement\n",
    "\n",
    "$$\n",
    " (U_s U_w)^k |s\\rangle = \\cos{\\frac{(2k+1)\\theta}{2}} |\\alpha\\rangle + \\sin{\\frac{(2k+1)\\theta}{2}} |\\beta\\rangle\n",
    "$$\n",
    "\n",
    "When $N \\gg M$ , $\\theta$ was a positive number close to zero, so each time $|s\\rangle$ was acted on by $U_s U_w$, the coefficient of $|\\alpha\\rangle$ would decrease and that of $|\\beta\\rangle$ would increase.\n",
    "Since $|\\beta\\rangle$ was made up of a superposition of all solution states, this means that the probability of obtaining a solution increases when $(U_s U_w)^k |s\\rangle$ is measured.\n",
    "\n",
    "This is  the reasons why Grover's algorithm can successfully search for solutions.\n",
    "\n",
    "#### Estimating the optimal $k$.\n",
    "Finally, let's evaluate how much $k$, the number of times to act on $U_s U_w$, i.e., how many times to call the oracle.\n",
    "This will determine the computational complexity.\n",
    "\n",
    "The closest $(U_s U_w)^k |s\\rangle$ comes to $|\\beta\\rangle$ is when $\\frac{(2k+1)\\theta}{2}$ is close to $\\frac{\\pi}{2}$, that is when $k$ is\n",
    "\n",
    "$$\n",
    " R = \\text{ClosestInteger}\\left( \\frac{\\pi}{2\\theta} -\\frac{1}{2} \\right)\n",
    "$$\n",
    "\n",
    "where $\\text{ClosestInteger}(\\ldots)$ denotes the integer closest to $\\ldots$.\n",
    "Let us evaluate the upper bound of $R$. \n",
    "\n",
    "$$\n",
    " \\frac{\\theta}{2} \\geq  \\sin \\frac{\\theta}{2} = \\sqrt{\\frac{M}{N}}\n",
    "$$\n",
    "\n",
    "With the above equation that hold for $\\theta > 0$, we get\n",
    "\n",
    "$$\n",
    " R \\leq \\left( \\frac{\\pi}{2\\theta} -\\frac{1}{2} \\right) + 1 = \\frac{\\pi}{2\\theta} + \\frac{1}{2} \\leq \\frac{\\pi}{4}\\sqrt{\\frac{N}{M}} + \\frac{1}{2}\n",
    "$$\n",
    "\n",
    "\n",
    "That is, $R$ is at most $O(\\sqrt{N/M})$ and Grover's algorithm works with $O(\\sqrt{N})$."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Example Implementation\n",
    "Let us try to implement Grover's algorithm using QURI Parts. (The implementation code is almost the same as in [4].)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "from quri_parts.core.state import GeneralCircuitQuantumState\n",
    "from quri_parts.qulacs.simulator import evaluate_state_to_vector\n",
    "import matplotlib.pyplot as plt\n",
    "## Function to plot the distribution of absolute values of coefficients\n",
    "def show_distribution(\n",
    "    state: GeneralCircuitQuantumState,\n",
    "    n_qubits: int\n",
    "):\n",
    "    plt.bar(\n",
    "        [i for i in range(pow(2, n_qubits))], \n",
    "        abs(evaluate_state_to_vector(state).vector)\n",
    "    )\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Checking the operation\n",
    "First, let's implement Grover's algorithm with 5 qubits and check its operation.\n",
    "The superposition state of all states $|s\\rangle$ can be created by acting on all bits of the state $|0\\cdots0\\rangle$ with Hadamard gate."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from quri_parts.circuit import QuantumCircuit\n",
    "from quri_parts.core.state import quantum_state\n",
    "\n",
    "n_qubits = 5\n",
    "\n",
    "def make_Hadamard(nqubits: int) -> QuantumCircuit:\n",
    "    Hadamard = QuantumCircuit(nqubits)\n",
    "    for i in range(nqubits):\n",
    "        Hadamard.add_H_gate(i)\n",
    "    return Hadamard\n",
    "\n",
    "\n",
    "Hadamard = make_Hadamard(n_qubits)\n",
    "state = quantum_state(n_qubits, circuit=Hadamard)\n",
    "\n",
    "show_distribution(state, n_qubits)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Next, we create the oracle $U_w$. Here we set $|1\\ldots1\\rangle$ as the solution, and create an operator that adds a phase (-1) to only $|1\\ldots1\\rangle$.\n",
    "Such an operator can be implemented as \"an operator that apply the $Z$ gate on the `nqubits`th qubit when all qubits from the `0`th to the `nqubits-1`th are `1`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "\n",
    "def make_U_w(n_qubits: int):\n",
    "    U_w = QuantumCircuit(n_qubits)\n",
    "    U_w.add_Z_gate(n_qubits-1, controlled_on={i: 1 for i in range(n_qubits-1)})\n",
    "    return U_w\n",
    "\n",
    "Uw = make_U_w(n_qubits)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Checking the action of the oracle, we can see that indeed only the last component ($|1\\cdots1\\rangle$) is inverted in phase."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[ 0.1767767+0.j  0.1767767+0.j  0.1767767+0.j  0.1767767+0.j\n",
      "  0.1767767+0.j  0.1767767+0.j  0.1767767+0.j  0.1767767+0.j\n",
      "  0.1767767+0.j  0.1767767+0.j  0.1767767+0.j  0.1767767+0.j\n",
      "  0.1767767+0.j  0.1767767+0.j  0.1767767+0.j  0.1767767+0.j\n",
      "  0.1767767+0.j  0.1767767+0.j  0.1767767+0.j  0.1767767+0.j\n",
      "  0.1767767+0.j  0.1767767+0.j  0.1767767+0.j  0.1767767+0.j\n",
      "  0.1767767+0.j  0.1767767+0.j  0.1767767+0.j  0.1767767+0.j\n",
      "  0.1767767+0.j  0.1767767+0.j  0.1767767+0.j -0.1767767+0.j]\n"
     ]
    }
   ],
   "source": [
    "from quri_parts.qulacs.simulator import evaluate_state_to_vector\n",
    "state = quantum_state(n_qubits, circuit = make_Hadamard(n_qubits) + Uw)\n",
    "print(evaluate_state_to_vector(state).vector)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Similarly, create an inversion $U_s$ with $|s\\rangle$ as the symmetry axis. Use the following equation holds.\n",
    "\n",
    "$$\n",
    "U_s = 2 |s\\rangle \\langle s| - I = H^{\\otimes n} (2 |0\\cdots0\\rangle \\langle0\\cdots0| - I) H^{\\otimes n}  \n",
    "$$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "def make_U_s(n_qubits: int):\n",
    "    Us = QuantumCircuit(n_qubits)\n",
    "    for i in range(n_qubits):\n",
    "        Us.add_H_gate(i)\n",
    "    \n",
    "    Us.add_RZ_gate(n_qubits-1, -2*np.pi)\n",
    "    Us.add_X_gate(n_qubits-1)\n",
    "    Us.add_Z_gate(n_qubits-1, controlled_on={i: 0 for i in range(n_qubits-1)})\n",
    "    Us.add_X_gate(n_qubits-1)\n",
    "\n",
    "    for i in range(n_qubits):\n",
    "        Us.add_H_gate(i)\n",
    "    \n",
    "    return Us\n",
    "\n",
    "Us = make_U_s(n_qubits)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now let's apply $U_s U_w$ just once and see how the probability distribution changes. The probability of all 1 states (the rightmost one) gets slightly larger."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from quri_parts.core.state import apply_circuit\n",
    "## Prepare initial state\n",
    "state = quantum_state(n_qubits, circuit=Hadamard)\n",
    "\n",
    "## apply U_s U_w \n",
    "state = apply_circuit(Uw + Us, state)\n",
    "show_distribution(state, n_qubits)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Repeat this a few times and you'll see."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.5082329989778305\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.7761601777867947\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.9470673343724091\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.9995910741614723\n"
     ]
    }
   ],
   "source": [
    "## Create a solution state |1....1> to evaluate the inner product.\n",
    "from quri_parts.core.state import ComputationalBasisState\n",
    "target_state = quantum_state(n_qubits, bits=2**n_qubits-1)\n",
    "\n",
    "## Run Grover's algorithm\n",
    "state = quantum_state(n_qubits, circuit=Hadamard)\n",
    "\n",
    "for i in range(4):\n",
    "    state = apply_circuit(Uw, state)\n",
    "    state = apply_circuit(Us, state)\n",
    "    show_distribution(state, n_qubits)\n",
    "    print(\n",
    "        np.linalg.norm(\n",
    "            evaluate_state_to_vector(state).vector.conj() @ evaluate_state_to_vector(target_state).vector\n",
    "        )\n",
    "    )\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "After about $k=4$ iterations, we got a solution state with probability almost 1.\n",
    "Let `nqubits` be a bit larger and check the behavior of the solution output probability for $k$."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "maximal probability 9.997306e-01 is obtained at k = 25\n"
     ]
    },
    {
     "data": {
      "image/png": "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/94v7rOADCNhYWGaPHmyNmzY0HLM5XJpw4YNSktLM7GywFJdXa39+/crPj7e7FICRmJiouLi4lrde5WVlfrggw+497z02WefqaysrFfff4Zh6LbbbtO6dev01ltvKTExsdXrkydPVmhoaKv7LT8/X4cOHerV91tn1609O3bskKRefb99ncvlUn19vX/cZz6ZJtsDnn/+eSM8PNx4+umnjby8POOWW24xBgwYYBQVFZldmt+6++67jU2bNhkFBQXGe++9Z6SnpxvR0dFGSUmJ2aX5laqqKmP79u3G9u3bDUnG448/bmzfvt04ePCgYRiG8cgjjxgDBgwwXn31VeOjjz4yLr30UiMxMdE4ceKEyZWbq6PrVlVVZdxzzz3G5s2bjYKCAuPNN980kpOTjdNPP92oq6szu3TTLFiwwHA4HMamTZuMwsLClq/a2tqWNrfeeqsxfPhw46233jK2bNlipKWlGWlpaSZWbb7Ortu+ffuMBx980NiyZYtRUFBgvPrqq8Zpp51mXHDBBSZXbp7Fixcbb7/9tlFQUGB89NFHxuLFiw2LxWL85z//MQzD/PssYMOIYRjGH//4R2P48OFGWFiYkZKSYrz//vtml+TX5syZY8THxxthYWHG0KFDjTlz5hj79u0zuyy/s3HjRkNSm6/58+cbhnHy8d7777/fiI2NNcLDw43p06cb+fn55hbtBzq6brW1tcYll1xiDB482AgNDTVGjBhh3Hzzzb3+w0N710uS8de//rWlzYkTJ4wf/ehHxsCBA42+ffsal112mVFYWGhe0X6gs+t26NAh44ILLjCioqKM8PBwY/To0cZPfvITo6KiwtzCTXTDDTcYI0aMMMLCwozBgwcb06dPbwkihmH+fWYxDMPwTR8MAABAWwE5ZwQAAAQPwggAADAVYQQAAJiKMAIAAExFGAEAAKYijAAAAFMRRgAAgKkIIwAAwFSEEQAAYCrCCAAAMBVhBAAAmIowAgAATPX/Aaktb2sToNRHAAAAAElFTkSuQmCC",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from quri_parts.core.state import ComputationalBasisState\n",
    "n_qubits = 10\n",
    "state = quantum_state(n_qubits)\n",
    "\n",
    "## Create a solution state |1....1> to evaluate the inner product.\n",
    "target_state = quantum_state(n_qubits, bits=2**n_qubits-1) ## 2**n_qubits-1 is binary number 1...1 \n",
    "target_state_vector = evaluate_state_to_vector(target_state).vector\n",
    "\n",
    "## Run Grover's algorithm\n",
    "Hadamard = make_Hadamard(n_qubits)\n",
    "Uw = make_U_w(n_qubits)\n",
    "Us = make_U_s(n_qubits)\n",
    "\n",
    "result = []\n",
    "\n",
    "state = quantum_state(n_qubits, circuit=Hadamard)\n",
    "for k in range(30):\n",
    "    state = apply_circuit(Uw, state)\n",
    "    state = apply_circuit(Us, state)\n",
    "    #show_distribution(state,nqubits)\n",
    "    state_vector = evaluate_state_to_vector(state).vector\n",
    "    result.append(\n",
    "        np.linalg.norm(state_vector.conj() @ target_state_vector)\n",
    "    )\n",
    "\n",
    "max_k = np.argmax(result)\n",
    "print( f\"maximal probability {result[max_k]:5e} is obtained at k = {max_k+1}\")\n",
    "\n",
    "plt.plot(np.arange(1, 30+1), result, \"o-\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The target state is obtained with probability 1 almost $k=25$ times. Also, the $k$ dependence of the probability is a sine function, as we saw in the \"Geometric Explanation\" section.\n",
    "\n",
    "Finally, let's see how the $k$ needed to find the solution behaves with respect to the number of qubits."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "nqubits=6, num_iter=7, suc_prob=9.526013e-01\n",
      "nqubits=8, num_iter=13, suc_prob=9.930691e-01\n",
      "nqubits=10, num_iter=26, suc_prob=9.963280e-01\n",
      "nqubits=12, num_iter=51, suc_prob=9.992534e-01\n",
      "nqubits=14, num_iter=101, suc_prob=9.998851e-01\n",
      "nqubits=16, num_iter=202, suc_prob=9.999368e-01\n"
     ]
    }
   ],
   "source": [
    "result = []\n",
    "min_nqubits = 6\n",
    "max_nqubits = 16\n",
    "for n_qubits in range(min_nqubits, max_nqubits+1, 2):\n",
    "    ## Prepare circuit\n",
    "    Hadamard = make_Hadamard(n_qubits)\n",
    "    Uw = make_U_w(n_qubits)\n",
    "    Us = make_U_s(n_qubits)\n",
    "\n",
    "    ## Create a solution state |1....1> to evaluate the inner product. \n",
    "    target_state = quantum_state(n_qubits, bits=2**n_qubits-1) ## 2**n_qubits-1 is binary number 1...1 \n",
    "    target_state_vector = evaluate_state_to_vector(target_state).vector\n",
    "    \n",
    "    state = quantum_state(n_qubits, circuit=Hadamard)\n",
    "\n",
    "    ## Multiply U_s U_w until the probability starts to decrease\n",
    "    tmp = 0\n",
    "    flag = 0\n",
    "    num_iter = 0\n",
    "    while flag == 0 and num_iter <= 1000:\n",
    "        num_iter += 1\n",
    "        state = apply_circuit(Uw, state)\n",
    "        state = apply_circuit(Us, state)\n",
    "        state_vector = evaluate_state_to_vector(state).vector\n",
    "\n",
    "        suc_prob = np.linalg.norm(state_vector.conj() @ target_state_vector)\n",
    "\n",
    "        if tmp < suc_prob:\n",
    "            tmp = suc_prob\n",
    "        else: \n",
    "            flag = 1\n",
    "    result.append( [n_qubits, num_iter, suc_prob] )\n",
    "    print(f\"nqubits={n_qubits}, num_iter={num_iter}, suc_prob={suc_prob:5e}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x124b6f880>"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "result_array = np.array(result)\n",
    "\n",
    "plt.xlim(min_nqubits-1, max_nqubits+1)\n",
    "plt.xlabel(\"n, # of qubits\", fontsize=15)\n",
    "plt.ylabel(\"k, # of iteration\", fontsize=15)\n",
    "plt.semilogy(result_array[:,0], result_array[:,1], \"o-\", label=\"experiment\")\n",
    "plt.semilogy(result_array[:,0], 0.05*2**result_array[:,0], \"-\", label=r\"$\\propto N=2^n$\")\n",
    "plt.semilogy(result_array[:,0], 2**(0.5*result_array[:,0]), \"-\", label=r\"$\\propto \\sqrt{N}=2^{n/2}$\")\n",
    "plt.legend(fontsize=10)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "qp_dev",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.16"
  },
  "orig_nbformat": 4
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
